#!/usr/bin/env python3

import requests
import json

def testar_exclusao_presente():
    """Testa a funcionalidade de excluir presente"""
    session = requests.Session()
    
    try:
        print('=== TESTE EXCLUS√ÉO DE PRESENTE ===')
        
        # Fazer login
        login_response = session.post('http://127.0.0.1:5000/admin/login', 
                                    data={'username': 'admin', 'password': 'Casamento2025*#'})
        print(f'Login: {login_response.status_code}')
        
        if login_response.status_code not in [200, 302]:
            print('‚ùå Falha no login')
            return False
        
        # Primeiro listar presentes para pegar um ID v√°lido
        presentes_response = session.get('http://127.0.0.1:5000/admin/presentes')
        if presentes_response.status_code != 200:
            print('‚ùå Erro ao acessar p√°gina de presentes')
            return False
            
        # Verificar se tem presentes na p√°gina
        content = presentes_response.text
        if 'data-id=' in content:
            # Extrair um ID de presente da p√°gina
            import re
            match = re.search(r'data-id="(\d+)"', content)
            if match:
                presente_id = match.group(1)
                print(f'‚úÖ Presente ID encontrado: {presente_id}')
                
                # Testar remo√ß√£o
                print(f'\nüóëÔ∏è Testando remo√ß√£o do presente {presente_id}...')
                remover_url = f'http://127.0.0.1:5000/admin/presentes/{presente_id}/remover'
                
                response = session.post(remover_url)
                print(f'Status da requisi√ß√£o: {response.status_code}')
                
                # Verificar se retorna JSON
                try:
                    result = response.json()
                    print(f'Resposta JSON: {result}')
                    
                    if result.get('success'):
                        print('‚úÖ Presente removido com sucesso!')
                        return True
                    else:
                        print(f'‚ö†Ô∏è Erro na remo√ß√£o: {result.get("error", "Erro desconhecido")}')
                        # Se o erro √© sobre presente j√° escolhido, ainda √© um sucesso do teste
                        if 'j√° foi escolhido' in result.get('error', ''):
                            print('‚úÖ API funcionando corretamente (presente j√° escolhido)')
                            return True
                        return False
                        
                except json.JSONDecodeError:
                    print('‚ùå Resposta n√£o √© JSON v√°lido')
                    print(f'Conte√∫do recebido: {response.text[:200]}')
                    return False
            else:
                print('‚ùå Nenhum ID de presente encontrado na p√°gina')
                return False
        else:
            print('‚ö†Ô∏è Nenhum presente encontrado na p√°gina para testar')
            return True  # N√£o √© erro se n√£o h√° presentes
            
    except Exception as e:
        print(f'‚ùå Erro durante teste: {e}')
        return False

if __name__ == "__main__":
    sucesso = testar_exclusao_presente()
    print(f'\nüìã RESULTADO: {"‚úÖ SUCESSO" if sucesso else "‚ùå FALHA"}')
